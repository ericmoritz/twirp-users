// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rpc/users/service.proto

/*
Package users is a generated protocol buffer package.

It is generated from these files:
	rpc/users/service.proto

It has these top-level messages:
	RegisterReq
	RegisterResp
	LoginReq
	LoginResp
	UserReq
	UserResp
	CurrentUserReq
	CurrentUserResp
	User
	Session
	PrivateUser
*/
package users

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// /////////////////////////////////////////////////////////////////////////////
// Register rpc
// /////////////////////////////////////////////////////////////////////////////
type RegisterReq struct {
	Username string `protobuf:"bytes,1,opt,name=username" json:"username,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password" json:"password,omitempty"`
}

func (m *RegisterReq) Reset()                    { *m = RegisterReq{} }
func (m *RegisterReq) String() string            { return proto.CompactTextString(m) }
func (*RegisterReq) ProtoMessage()               {}
func (*RegisterReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *RegisterReq) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *RegisterReq) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type RegisterResp struct {
	User *User `protobuf:"bytes,1,opt,name=user" json:"user,omitempty"`
}

func (m *RegisterResp) Reset()                    { *m = RegisterResp{} }
func (m *RegisterResp) String() string            { return proto.CompactTextString(m) }
func (*RegisterResp) ProtoMessage()               {}
func (*RegisterResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *RegisterResp) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

// /////////////////////////////////////////////////////////////////////////////
// Login rpc
// /////////////////////////////////////////////////////////////////////////////
type LoginReq struct {
	Username string `protobuf:"bytes,1,opt,name=username" json:"username,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password" json:"password,omitempty"`
}

func (m *LoginReq) Reset()                    { *m = LoginReq{} }
func (m *LoginReq) String() string            { return proto.CompactTextString(m) }
func (*LoginReq) ProtoMessage()               {}
func (*LoginReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *LoginReq) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *LoginReq) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type LoginResp struct {
	Session *Session `protobuf:"bytes,1,opt,name=session" json:"session,omitempty"`
}

func (m *LoginResp) Reset()                    { *m = LoginResp{} }
func (m *LoginResp) String() string            { return proto.CompactTextString(m) }
func (*LoginResp) ProtoMessage()               {}
func (*LoginResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *LoginResp) GetSession() *Session {
	if m != nil {
		return m.Session
	}
	return nil
}

// /////////////////////////////////////////////////////////////////////////////
// User() rpc
// /////////////////////////////////////////////////////////////////////////////
type UserReq struct {
	Username string `protobuf:"bytes,2,opt,name=username" json:"username,omitempty"`
}

func (m *UserReq) Reset()                    { *m = UserReq{} }
func (m *UserReq) String() string            { return proto.CompactTextString(m) }
func (*UserReq) ProtoMessage()               {}
func (*UserReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *UserReq) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

type UserResp struct {
	User *User `protobuf:"bytes,1,opt,name=user" json:"user,omitempty"`
}

func (m *UserResp) Reset()                    { *m = UserResp{} }
func (m *UserResp) String() string            { return proto.CompactTextString(m) }
func (*UserResp) ProtoMessage()               {}
func (*UserResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *UserResp) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

// /////////////////////////////////////////////////////////////////////////////
// CurrentUser() rpc
// /////////////////////////////////////////////////////////////////////////////
type CurrentUserReq struct {
	Session *Session `protobuf:"bytes,1,opt,name=session" json:"session,omitempty"`
}

func (m *CurrentUserReq) Reset()                    { *m = CurrentUserReq{} }
func (m *CurrentUserReq) String() string            { return proto.CompactTextString(m) }
func (*CurrentUserReq) ProtoMessage()               {}
func (*CurrentUserReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *CurrentUserReq) GetSession() *Session {
	if m != nil {
		return m.Session
	}
	return nil
}

type CurrentUserResp struct {
	User *User `protobuf:"bytes,1,opt,name=user" json:"user,omitempty"`
}

func (m *CurrentUserResp) Reset()                    { *m = CurrentUserResp{} }
func (m *CurrentUserResp) String() string            { return proto.CompactTextString(m) }
func (*CurrentUserResp) ProtoMessage()               {}
func (*CurrentUserResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *CurrentUserResp) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

// User is the public user message
type User struct {
	Username string `protobuf:"bytes,1,opt,name=username" json:"username,omitempty"`
}

func (m *User) Reset()                    { *m = User{} }
func (m *User) String() string            { return proto.CompactTextString(m) }
func (*User) ProtoMessage()               {}
func (*User) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *User) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

// Session is a message that represents a session. Use it as your key
// for making authenticated rpc calls
type Session struct {
	Token    string `protobuf:"bytes,1,opt,name=token" json:"token,omitempty"`
	Username string `protobuf:"bytes,2,opt,name=username" json:"username,omitempty"`
}

func (m *Session) Reset()                    { *m = Session{} }
func (m *Session) String() string            { return proto.CompactTextString(m) }
func (*Session) ProtoMessage()               {}
func (*Session) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *Session) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *Session) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

// PrivateUser is the message that is stored in the DB, do not publiclly expose it.
type PrivateUser struct {
	Username       string `protobuf:"bytes,1,opt,name=username" json:"username,omitempty"`
	PasswordSha256 []byte `protobuf:"bytes,2,opt,name=passwordSha256,proto3" json:"passwordSha256,omitempty"`
}

func (m *PrivateUser) Reset()                    { *m = PrivateUser{} }
func (m *PrivateUser) String() string            { return proto.CompactTextString(m) }
func (*PrivateUser) ProtoMessage()               {}
func (*PrivateUser) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *PrivateUser) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *PrivateUser) GetPasswordSha256() []byte {
	if m != nil {
		return m.PasswordSha256
	}
	return nil
}

func init() {
	proto.RegisterType((*RegisterReq)(nil), "ericmoritz.users.RegisterReq")
	proto.RegisterType((*RegisterResp)(nil), "ericmoritz.users.RegisterResp")
	proto.RegisterType((*LoginReq)(nil), "ericmoritz.users.LoginReq")
	proto.RegisterType((*LoginResp)(nil), "ericmoritz.users.LoginResp")
	proto.RegisterType((*UserReq)(nil), "ericmoritz.users.UserReq")
	proto.RegisterType((*UserResp)(nil), "ericmoritz.users.UserResp")
	proto.RegisterType((*CurrentUserReq)(nil), "ericmoritz.users.CurrentUserReq")
	proto.RegisterType((*CurrentUserResp)(nil), "ericmoritz.users.CurrentUserResp")
	proto.RegisterType((*User)(nil), "ericmoritz.users.User")
	proto.RegisterType((*Session)(nil), "ericmoritz.users.Session")
	proto.RegisterType((*PrivateUser)(nil), "ericmoritz.users.PrivateUser")
}

func init() { proto.RegisterFile("rpc/users/service.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 367 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x53, 0x51, 0x4b, 0x32, 0x41,
	0x14, 0x45, 0x71, 0xbf, 0x5d, 0xef, 0x8a, 0xdf, 0xc7, 0xf0, 0x51, 0xba, 0x51, 0xd8, 0x42, 0x11,
	0x3d, 0xac, 0xa0, 0xe4, 0x43, 0x21, 0x88, 0xe1, 0x43, 0xd0, 0x43, 0xad, 0xf4, 0xd2, 0xdb, 0x66,
	0x17, 0x1b, 0xc2, 0x9d, 0x71, 0xee, 0x6a, 0xd0, 0x1f, 0xea, 0x6f, 0xc6, 0xce, 0xee, 0x96, 0xba,
	0xa8, 0x58, 0x8f, 0x77, 0xce, 0xd9, 0x73, 0xce, 0xdc, 0x39, 0x0b, 0xfb, 0x4a, 0x8e, 0x9a, 0x33,
	0x42, 0x45, 0x4d, 0x42, 0x35, 0xe7, 0x23, 0xf4, 0xa4, 0x12, 0x91, 0x60, 0xff, 0x50, 0xf1, 0xd1,
	0x44, 0x28, 0x1e, 0xbd, 0x7b, 0x1a, 0x77, 0x07, 0x60, 0xfb, 0x38, 0xe6, 0x14, 0xa1, 0xf2, 0x71,
	0xca, 0x1c, 0xb0, 0xe2, 0xf3, 0x30, 0x98, 0x60, 0xad, 0xd0, 0x28, 0x9c, 0x95, 0xfd, 0xaf, 0x39,
	0xc6, 0x64, 0x40, 0xf4, 0x26, 0xd4, 0x73, 0xad, 0x98, 0x60, 0xd9, 0xec, 0x5e, 0x42, 0xe5, 0x5b,
	0x86, 0x24, 0x3b, 0x87, 0x52, 0xfc, 0x9d, 0xd6, 0xb0, 0x5b, 0x7b, 0xde, 0xaa, 0xaf, 0xf7, 0x40,
	0xa8, 0x7c, 0xcd, 0x71, 0xfb, 0x60, 0xdd, 0x8a, 0x31, 0x0f, 0x7f, 0xe3, 0xdf, 0x83, 0x72, 0xaa,
	0x41, 0x92, 0xb5, 0xc1, 0x24, 0x24, 0xe2, 0x22, 0x4c, 0xfd, 0xeb, 0x79, 0xff, 0x61, 0x42, 0xf0,
	0x33, 0xa6, 0x7b, 0x02, 0xa6, 0xce, 0xb4, 0x12, 0xa2, 0xb8, 0x1c, 0xc2, 0xed, 0x80, 0x95, 0xd0,
	0x76, 0xbc, 0xe4, 0x00, 0xaa, 0xd7, 0x33, 0xa5, 0x30, 0x8c, 0x32, 0x97, 0x1f, 0xa5, 0xec, 0xc2,
	0xdf, 0x25, 0x99, 0x1d, 0x53, 0xb8, 0x50, 0x8a, 0xa7, 0x4d, 0x6b, 0x76, 0xaf, 0xc0, 0x4c, 0x6d,
	0xd9, 0x7f, 0x30, 0x22, 0xf1, 0x8a, 0x61, 0xca, 0x49, 0x86, 0x8d, 0xeb, 0xb9, 0x07, 0xfb, 0x4e,
	0xf1, 0x79, 0x10, 0xe1, 0x36, 0x1f, 0x76, 0x0a, 0xd5, 0xec, 0xf9, 0x86, 0x2f, 0x41, 0xeb, 0xa2,
	0xa3, 0xc5, 0x2a, 0xfe, 0xca, 0x69, 0xeb, 0xa3, 0x08, 0x46, 0x2c, 0x46, 0xec, 0x06, 0xac, 0xac,
	0x64, 0xec, 0x30, 0x7f, 0xcf, 0x85, 0x1e, 0x3b, 0x47, 0x9b, 0x60, 0x92, 0xac, 0x07, 0x86, 0xee,
	0x0b, 0x73, 0xf2, 0xc4, 0xac, 0x8c, 0xce, 0xc1, 0x5a, 0x8c, 0x24, 0xeb, 0xa6, 0xab, 0xac, 0xaf,
	0x59, 0x38, 0x4e, 0x1d, 0x67, 0x1d, 0x44, 0x92, 0xf9, 0x60, 0x2f, 0x3c, 0x24, 0x6b, 0xe4, 0xa9,
	0xcb, 0x75, 0x71, 0x8e, 0xb7, 0x30, 0x48, 0xf6, 0xcd, 0x47, 0x43, 0x03, 0x4f, 0x7f, 0xf4, 0xdf,
	0xde, 0xfe, 0x0c, 0x00, 0x00, 0xff, 0xff, 0x4e, 0x5d, 0xbb, 0xcd, 0x08, 0x04, 0x00, 0x00,
}
